{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","_ref","year","title","summary","poster","genres","react_default","a","createElement","className","src","alt","map","idx","key","toString","slice","renderMovie","movie","src_Movie","id","medium_cover_image","App","state","isLoading","movies","getMovies","_callee","_yield$axios$get","_regeneratorRuntime","wrap","_context","prev","next","axios","get","sent","data","_this","setState","console","log","stop","this","_this$state","React","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"yQA8BeA,MA3Bf,SAAAC,GAAwD,IAAxCC,EAAwCD,EAAxCC,KAAMC,EAAkCF,EAAlCE,MAAOC,EAA2BH,EAA3BG,QAASC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,OAC1C,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAClBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,EAAOO,UAAU,kBACtDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBP,GAC9BI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACTR,GAELK,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACTJ,EAAOO,IAAI,SAACP,EAAOQ,GAChB,OAAOP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeK,IAAKD,EAAIE,YACxCV,MAIbC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBN,EAAQa,MAAM,EAAE,KAA/C,ozMCXZ,IAAMC,EAAc,SAACC,GACnB,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,CACLL,IAAKI,EAAME,GACXlB,MAAOgB,EAAMhB,MACbD,KAAMiB,EAAMjB,KACZE,QAASe,EAAMf,QACfC,OAAQc,EAAMG,mBACdhB,OAAQa,EAAMb,UAuCHiB,6MAjCbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,MAEVC,+BAAY,SAAAC,IAAA,IAAAC,EAAAH,EAAA,OAAAI,IAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAIAC,IAAMC,IAAI,yDAJV,OAAAP,EAAAG,EAAAK,KAEAX,EAFAG,EACFS,KACNA,KAAQZ,OAGVa,EAAKC,SAAS,CAAEd,SAAQD,WAAW,IACnCgB,QAAQC,IAAIhB,GANF,wBAAAM,EAAAW,SAAAf,yFASVgB,KAAKjB,6CAGE,IAAAkB,EACuBD,KAAKpB,MAA3BC,EADDoB,EACCpB,UAAWC,EADZmB,EACYnB,OACnB,OAAQnB,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACxBe,EACClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,wDAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdgB,EAAOb,IAAIK,YA3BJ4B,IAAMC,WCfXC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7C,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,WAAP,KACE9C,EAAAC,EAAAC,cAAC6C,EAAD","file":"static/js/main.5a188202.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Movie.css\";\r\nimport PropTypes from \"prop-types\";\r\nfunction Movie({year, title, summary, poster, genres }) {\r\n    return <div className=\"Movie\">\r\n        <img src={poster} alt={title} title={title} className=\"Movie__poster\" />\r\n        <div className=\"Movie__column\">\r\n            <h3 className=\"Movie__title\">{title}</h3>\r\n            <h5 className=\"Movie__yaer\">\r\n                {year}\r\n            </h5>\r\n            <ul className=\"Movie__genres\">\r\n                {genres.map((genres,idx) => {\r\n                    return <li className=\"Movie__genre\" key={idx.toString()}>\r\n                        {genres}\r\n                    </li>\r\n                })}\r\n            </ul>\r\n            <p className=\"Movie__summary\">{summary.slice(0,140)}...</p>\r\n        </div>\r\n    </div>\r\n}\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\nexport default Movie","\nimport React from \"react\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n// import PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nconst renderMovie = (movie) => {\n  return <Movie\n    key={movie.id}\n    title={movie.title}\n    year={movie.year}\n    summary={movie.summary}\n    poster={movie.medium_cover_image}\n    genres={movie.genres}\n  />\n\n}\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const { data: {\n      data: { movies },\n    },\n    } = await axios.get('https://yts.mx/api/v2/list_movies.json?sort_by=rating')\n    this.setState({ movies, isLoading: false })\n    console.log(movies);\n  }\n  componentDidMount() {\n    this.getMovies()\n  }\n\n  render() {\n    const { isLoading, movies } = this.state\n    return (<section className=\"Container\">\n      {isLoading ?\n        <div className=\"Loader\">\n          <span className=\"Loader__text\">\n            Загрузка...\n          </span>\n        </div>\n        : <div className=\"Movies\">\n          {movies.map(renderMovie)}\n        </div>}\n\n    </section>)\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}